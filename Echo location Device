#include <LedControl.h>

 

const int DIN = 12;

const int CLK = 11;

const int CS = 10;

 

const int TRIG = 7;

const int ECHO = 8;

 

LedControl lc = LedControl(12, 11, 10, 1);

 

int duration = 0;

int distance = 0;

const int STEP = 30;

const int THRESHOLD = 30;

 

byte levels[8][8] = {

  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000},

  {B00000000, B00000000, B00000000, B00011000, B00011000, B00000000, B00000000, B00000000},

  {B00000000, B00000000, B00011000, B00111100, B00111100, B00011000, B00000000, B00000000},

  {B00000000, B00011000, B00111100, B01111110, B01111110, B00111100, B00011000, B00000000},

  {B00011000, B00111100, B01111110, B11111111, B11111111, B01111110, B00111100, B00011000},

  {B00111100, B01111110, B11111111, B11111111, B11111111, B11111111, B01111110, B00111100},

  {B01111110, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B01111110},

  {B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111}

};

 

void setup() {

  Serial.begin(9600);

 

  lc.shutdown(0, false);

  lc.setIntensity(0, 8);

  lc.clearDisplay(0);

 

  pinMode(TRIG, OUTPUT);

  pinMode(ECHO, INPUT);

 

  // power on animation

  for (int i=0; i<8; i++) {

    for (int j=0; j<8; j++) {

      lc.setRow(0, j, levels[i][j]);

    }

    delay(100);

  }

}

 

void display(int distance) {

  int level = min((distance - THRESHOLD) / STEP, 7);

  for (int i=0; i<8; i++) {

    lc.setRow(0, i, levels[level][i]);

  }

}

 

void loop() {

  digitalWrite(TRIG, HIGH);

  delayMicroseconds(10);

  digitalWrite(TRIG, LOW);

  duration = pulseIn(ECHO, HIGH);  

  distance= duration*0.034/2;                                  

Serial.print("Distance: ");                                      

Serial.println(distance);

 

if(distance<30) {

    distance = duration * 340.29 / 2 / 1000;

    display(distance);

  } 

    delay(50);

 

}
